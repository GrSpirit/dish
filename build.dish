#!/bin/bash
# Container build script
# Called internally by di.sh build inside new container
#
# Usage:
#   Initial run & build charms
#     $0 <DEF> <PREFIX> [CMD]
#   Example:
#     build.dish test tmp/dish-$$
# ------------------------------------------------------------------------------
# charm utils

# register port (for EXPOSE)
add_port() {
  echo $@ >> $TMP_PREFIX.ports
}

# register boot command
add_boot() {
  echo $@ >> $run_file
}

# register boot command
set_cmd() {
  CMD=$@
}

# add charm if needed
require() {
  local charm=$1
  shift
  echo "Checking for required charm $charm in $CHARMS.."
  [[ $CHARMS == ${CHARMS/:$charm:/} ]] && {
    echo "Warning: It seems charm $charm is forgotten. Adding"
    sleep 2
    _run $charm $@
  }
}

# ------------------------------------------------------------------------------
# internal use, run charm script
_run() {
  local charm=$1
  shift
  echo "# *** $charm $@ *** #" >> $run_file
  echo "# *** $charm $@ *** #"
  . charm/$charm $@ -- || { echo "Charm $charm build error" ; exit 1; }  # dont pass my args into charm
  CHARMS="$CHARMS$charm:"
}

# ------------------------------------------------------------------------------

DEF=$1
shift
TMP_PREFIX=$1
shift

CMD=""
CHARMS=":"

echo "Build container $DEF"
[ -f def/$DEF ] || { echo "No def def/$DEF" ; exit 1 ; }

run_file=/di.sh

cat > $run_file <<EOF
#!/bin/bash
# Autogenerated by dish for $DEF

echo "Run $DEF container"

EOF

while read line ; do
  s=${line%%#*} # remove endline comments
  [ -n "${s##+([[:space:]])}" ] || continue # ignore line if contains only spaces
  _run $s
done < def/$DEF

echo '[ -f boot.sh ] && /bin/bash boot.sh' >> $run_file

[[ "$CMD" ]] || CMD="$@"
echo $CMD >> $run_file
chmod a+x $run_file

echo "Container build complete."
